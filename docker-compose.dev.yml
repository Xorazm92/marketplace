version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: inbola_postgres_dev
    environment:
      POSTGRES_DB: inbola_marketplace_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: inbola_secure_password_2024
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - inbola_dev_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: inbola_redis_dev
    command: redis-server --appendonly yes --requirepass inbola_redis_secure_2024
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    networks:
      - inbola_dev_network
    restart: unless-stopped

  # Backend API (Development)
  backend:
    build:
      context: ./backend-main
      dockerfile: Dockerfile
      target: development
    container_name: inbola_backend_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:inbola_secure_password_2024@postgres:5432/inbola_marketplace_dev
      REDIS_URL: redis://:inbola_redis_secure_2024@redis:6379
      JWT_SECRET: inbola_jwt_super_secret_key_2024_marketplace
      JWT_REFRESH_SECRET: inbola_refresh_super_secret_key_2024_marketplace
      PORT: 3001
      FRONTEND_URL: http://localhost:3000
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: your-email@gmail.com
      SMTP_PASS: your-app-password
      TWILIO_ACCOUNT_SID: your-twilio-account-sid
      TWILIO_AUTH_TOKEN: your-twilio-auth-token
    ports:
      - "3001:3001"
    volumes:
      - ./backend-main:/app
      - /app/node_modules
      - ./backend-main/uploads:/app/uploads
    networks:
      - inbola_dev_network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    command: npm run start:dev

  # Frontend (Development)
  frontend:
    build:
      context: ./front-main
      dockerfile: Dockerfile
      target: development
    container_name: inbola_frontend_dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_GRAPHQL_ENDPOINT: http://localhost:3001/graphql
    ports:
      - "3000:3000"
    volumes:
      - ./front-main:/app
      - /app/node_modules
      - /app/.next
    networks:
      - inbola_dev_network
    depends_on:
      - backend
    restart: unless-stopped
    command: npm run dev

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  inbola_dev_network:
    driver: bridge
