version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: marketplace_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: marketplace
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - marketplace_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: marketplace_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - marketplace_network

  # Backend API
  backend:
    build:
      context: ./backend-main
      dockerfile: Dockerfile
    container_name: marketplace_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4000
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/marketplace
      REDIS_URL: redis://:redis123@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      
      # Stripe
      STRIPE_SECRET_KEY: sk_test_your_stripe_secret_key
      STRIPE_PUBLISHABLE_KEY: pk_test_your_stripe_publishable_key
      STRIPE_WEBHOOK_SECRET: whsec_your_webhook_secret
      
      # PayPal
      PAYPAL_CLIENT_ID: your_paypal_client_id
      PAYPAL_CLIENT_SECRET: your_paypal_client_secret
      PAYPAL_MODE: sandbox
      
      # File upload
      UPLOAD_PATH: /app/uploads
      MAX_FILE_SIZE: 10485760
      
      # Email (optional)
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: your-email@gmail.com
      SMTP_PASS: your-app-password
      
      # SMS (optional)
      SMS_API_KEY: your_sms_api_key
      SMS_API_URL: https://sms.api.uz/send
      
    volumes:
      - ./backend-main/uploads:/app/uploads
      - ./backend-main/logs:/app/logs
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - redis
    networks:
      - marketplace_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Next.js
  frontend:
    build:
      context: ./front-main
      dockerfile: Dockerfile
    container_name: marketplace_frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:4000/api/v1
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_your_stripe_publishable_key
      NEXT_PUBLIC_PAYPAL_CLIENT_ID: your_paypal_client_id
      NEXT_PUBLIC_SOCKET_URL: http://localhost:4000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - marketplace_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: marketplace_nginx
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend-main/uploads:/var/www/uploads:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - marketplace_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  marketplace_network:
    driver: bridge
